mongo queries


show dbs  /// to check database

show collections /// to show database collection


use db // to select database

db.createCollection("myCollection")  // to create collection


collection_name.drop() /// drop collection

db.dropDatabase()  //drop database



db.cars.updateOne(           //update data
{model:"Nexon"}
{$set:{color:"Red"}}
);


db.collection.find() // to find all data

db.collection.find({model:"Nexon"})  //to find only model in all doucments
db.collection.findOne({model:"Nexon"}  // to find only in one doucment
db.collection.find({model:"Nexon",maker:"Honda"})  // to find these values
db.collection.find({},{model:1})  // this will search where is model in all documents
db.collection.find({"engine.cc":{$gt:1000}})   //this will search engine.cc value should be greater than 1000 in all documents
db.collection.find({"engine.cc":{$in:[1498,1000,2000]}})   // to search multiple value like array you can give multiple value to search
db.collection.find({"engine.cc":{$nin:[1498,1000,2000]}})  // not in these values



db.cars.find({$and:[{model:"Venue"},{Make:"Hundai"}]})  // with and operator for multiple condition check


db.cars.find({$or:[{model:"Venue"},{"engine.cc":{$gt:1000}}]})        // or operator to check multiple conditions



db.cars.find({model:{$exists:true}})   // to check the value is exist or not


db.cars.find({features:{$size:3}})   /// to check if it has three values in array of it

db.collections.find({features:{$all:[]}})       // to check all values and find values



db.collection.find({},{model:1,_id:0}).count()  // if you don't want some like object id you can set it to zero

db.collection.find({},{model:1,_id:0}).sort()      // it will show you the data in sorted format

db.collection.find({},{model:1,_id:0}).limit(3)           // to show only three values 
db.cars.find({},{_id:0,model:1,maker:1}).sort({maker:1})    // to sort based on maker values



db.aggreagate.aggregate([                //more complex fuction group based on _id with field is maker
    {$group:{_id:"$maker"}}
])

db.aggreagate.aggregate([                            // show total how maker value is appearing like hundai is appearing 3 or 4 times that is totalcars sum function
    {
        $group:{_id:"$maker",TotalCars:{$sum:1}
        }}
])


db.aggreagate.aggregate([                 // to field maker and price in the document
    {
        $group:{
            _id:"$maker",
            Avgprice:{$avg:"$price"}
        }}
])









db.hypernet_idletime.aggregate([
  { $group: { _id: "$device_id", count: { $sum: 1 } } }
])


db.hypernet_idletime.aggregate([
  { $group: { _id: "$device_id", lat: { $sum: 1 } } }
])


db.hypernet_idletime.aggregate([
  {
    $match: {
      device_id: "355087093860565",
      start_time: { $gte: ISODate("2022-05-22T00:00:00Z") },
      end_time: { $ne: null }
    }
  }
])



db.hypernet_idletime.aggregate([
  { 
    $match: { id: { $gt: 1 } } 
  },
  {
    $group: {
      _id: "$device_id",  // group by device
      totalDuration: { $sum: "$duration" }  // sum durations
    }
  }
])
