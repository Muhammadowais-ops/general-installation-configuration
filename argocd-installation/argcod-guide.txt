##### argo installation

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

kubectl patch svc argocd-server -n argocd -p \
  '{"spec": {"type": "NodePort", "ports": [{"name": "http", "nodePort": 30080, "port": 80, "protocol": "TCP", "targetPort": 8080}, {"name": "https", "nodePort": 30443, "port": 443, "protocol": "TCP", "targetPort": 8080}]}}'

#########

### argocd cli install ########

VERSION=$(curl -L -s https://raw.githubusercontent.com/argoproj/argo-cd/stable/VERSION)

curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/v$VERSION/argocd-linux-amd64

sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd

rm -rf argocd-linux-amd64


argocd admin initial-password -n argocd


### configure argocd cli access ########


argocd login localhost:30443  ######### localhost nodePort or url


argocd app list
NAME                CLUSTER                         NAMESPACE  PROJECT  STATUS  HEALTH   SYNCPOLICY  CONDITIONS  REPO                                                          PATH            TARGET
argocd/testing-app  https://kubernetes.default.svc  default    default  Synced  Healthy  Auto-Prune  <none>      https://github.com/Muhammadowais-ops/kubernetes-and-helm.git  argocd-example  HEAD


######## argocd ###########

argocd repo for helm is there you can use that to configure with helm

also you need to have argocd install and login to see the app which you configure in argocd


you can use below command like 

helm create test

this will create helm chart for the application 

